# -*- encoding:utf-8 -*-
# -*- coding:utf-8 -*-


def run_main():
    db_images = [
        'csg562-003', 'csg562-004', 'csg562-005', 'csg562-006',
        'csg562-007', 'csg562-008', 'csg562-009', 'csg562-010',
        'csg562-011', 'csg562-012', 'csg562-013', 'csg562-014',
        'csg562-015', 'csg562-016', 'csg562-017', 'csg562-018',
        'csg562-019', 'csg562-020', 'csg562-021', 'csg562-022',
        'csg562-023', 'csg562-024', 'csg562-025', 'csg562-026',
        'csg562-027', 'csg562-028', 'csg562-029', 'csg562-030',
        'csg562-031', 'csg562-032', 'csg562-033', 'csg562-034',
        'csg562-035', 'csg562-036', 'csg562-037', 'csg562-038',
        'csg562-039', 'csg562-040', 'csg562-041', 'csg562-042',
        'csg562-043', 'csg562-044', 'csg562-045', 'csg562-046',
        'csg562-047', 'csg562-048', 'csg562-049', 'csg562-050',
        'csg562-054', 'csg562-055', 'csg562-056', 'csg562-057',
        'csg562-058', 'csg562-059', 'csg562-060', 'csg562-061',
        'csg562-062', 'csg562-063', 'csg562-064', 'csg562-065'
    ]
    import matplotlib.pyplot as plt
    #plt.title('PSNR')
    images = []
    for i in range(60):
        images.append(i+1)
    plt.plot(
        images,
        [
            39.412400,37.953329,39.405832,38.916522,38.439209,37.999932,38.835189,37.935623,38.755422,37.274261,38.235718,37.396278,37.745851,37.487157,37.877802,37.422671,37.066242,38.170408,37.704153,37.574749,37.589621,37.812069,37.548741,37.335278,37.162564,37.086484,37.729254,37.735927,38.254805,38.744720,37.203511,37.621834,36.762054,38.031645,36.726871,37.931698,37.911517,39.595517,38.034024,37.400031,38.340388,37.830170,38.160768,39.374882,37.688412,37.946189,37.771573,37.482753,36.664810,36.918083,37.218706,37.204875,37.825845,36.613349,36.749791,38.279079,37.347104,36.789668,36.474545,36.135333
        ], '*', label='(Shivani, 2017)', markersize=12, color='brown')
    plt.plot(
        images,
        [
            32.942211,32.482750,32.873229,32.250052,32.192542,32.289131,32.175604,32.163622,32.280870,32.387490,32.261490,32.295386,32.478652,32.299353,32.189106,32.484635,32.173200,32.682220,32.192177,32.326366,32.212692,32.401887,32.145518,32.230704,32.637898,32.307429,32.256415,32.500181,32.908275,32.394803,32.270795,32.465574,32.069685,32.199538,32.341669,32.522166,32.380163,32.472673,32.094687,32.034447,32.271921,32.487768,32.567326,32.664959,32.422300,32.170887,31.997221,32.130697,32.202558,32.075111,32.463362,32.002566,32.181643,32.185171,32.096452,32.209672,32.296958,32.123008,32.168209,31.892561
        ], 's', label='(Liu, 2018)', markersize=12, color='green')
    plt.plot(
        images,
        [
            44.265707,44.676721,45.411788,44.531670,44.694593,44.252413,45.035256,44.493173,45.007116,44.376873,45.185017,44.943083,44.801391,44.854296,44.900670,44.581012,44.560070,45.088821,44.661495,44.690536,44.719412,44.512057,45.017194,44.697061,44.582661,44.674387,45.198149,44.845690,45.022010,45.046487,44.577858,45.003475,44.808285,44.826332,44.977428,44.758299,44.846555,45.587070,44.693239,44.678502,45.128010,44.642840,44.997605,45.267579,44.823783,44.874219,44.804761,44.596934,43.971378,44.644823,44.543947,44.587669,44.738352,44.536479,44.649925,45.459403,44.884012,44.586786,44.753116,44.195675
        ], '^', label='(Avila-Domenech, 2018)', markersize=12)
    plt.plot(
        images,
        [
            45.369442,45.947478,47.024037,45.730454,45.986061,45.371383,46.584632,45.811163,46.471469,45.554522,46.815913,46.457573,46.293523,46.259346,46.321463,45.785345,45.778517,46.601330,45.984213,45.977060,46.147375,45.702016,46.558657,45.901613,45.785495,46.071789,46.859379,46.293357,46.495370,46.509776,45.822967,46.465836,46.197865,46.129732,46.412059,46.213322,46.353495,47.422084,45.968513,46.007451,46.622761,45.934078,46.449579,46.922754,46.259729,46.254851,46.242444,45.729350,45.045943,45.976057,45.951304,45.876765,46.145755,45.756572,46.015646,47.219347,46.242926,45.890379,46.148057,45.409471
        ], 'ro', label='Proposed scheme', markersize=8, color='red')
    plt.ylabel('PSNR')
    plt.legend(loc='upper left', numpoints=1)
    plt.axis([0, 60, 30, 52])
    plt.xticks(images, db_images, size='small', color='k', rotation=-85)
    plt.grid(True)
    font = {
        'family' : 'monospace',
        'weight' : 'bold',
        'size'   : 50}
    plt.rc('font', **font)
    plt.show()


if __name__ == "__main__":
    run_main()